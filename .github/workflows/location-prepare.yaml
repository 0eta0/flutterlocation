name: location prepare

on:
  push:
    branches: [master, develop]
    tags-ignore: ['*']
  pull_request:
    branches: [master, develop]

jobs:
  prepare-flutter:
    name: Flutter ${{ matrix.flutter-version }}
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        flutter-version: ['3.0.x', '3.3.x', '3.7.x', '3.10.0']

    steps:
      - name: Clone repository
        uses: actions/checkout@v3

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ matrix.flutter-version }}

      - name: Set up Melos
        run: dart pub global activate melos ^2.0.0

      - name: melos bootstrap
        run: melos bootstrap

      - name: Format and lint
        if: success() || failure()
        run: melos run lint:all

      - name: Run tests
        if: success() || failure()
        run: melos run test --no-select

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 11

      - name: Generate Gradle wrapper
        working-directory: packages/location/example
        run: flutter build apk --debug --flavor=does-not-exist || true

      - name: Build example app with Gradle
        working-directory: packages/location/example/android
        run: ./gradlew :app:assembleDebug

      - name: Build example app with Flutter tool
        working-directory: packages/location/example
        run: flutter build apk --debug
